{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","feels_like","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAEMA,EACA,mCADAA,EAEC,0CA+FQC,MA5Ff,WAAgB,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,OAEgBF,mBAAS,IAFzB,mBAEPG,EAFO,KAEEC,EAFF,KA6Cd,OACC,qBACCC,UACwB,oBAAhBF,EAAQG,MACZH,EAAQG,KAAKC,KAAO,GACnB,WAED,MANL,SASC,iCACC,qBAAKF,UAAU,aAAf,SACC,uBACCG,KAAK,OACLH,UAAU,aACVI,YAAY,YACZC,SAAU,SAACC,GAAD,OAAOT,EAASS,EAAEC,OAAOC,QACnCA,MAAOZ,EACPa,WA5DU,SAACC,GACC,UAAZA,EAAIC,KACPC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACxDoB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACNjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WAwDW,oBAAhBlB,EAAQG,KACf,gCACC,sBAAKD,UAAU,eAAf,UACC,sBAAKA,UAAU,WAAf,UACEF,EAAQqB,KADV,KACkBrB,EAAQsB,IAAIC,WAE9B,qBAAKrB,UAAU,OAAf,SAzDc,SAACsB,GACpB,IAuBIC,EATO,CACV,SACA,SACA,UACA,UACA,WACA,SACA,YAEcD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EAzBS,CACZ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAakBL,EAAEM,YACjBC,EAAOP,EAAEQ,cACb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GA6BNE,CAAY,IAAIC,WAExC,sBAAKhC,UAAU,cAAf,UACC,sBAAKA,UAAU,OAAf,UACEiC,KAAKC,MAAMpC,EAAQG,KAAKC,MAD1B,QAEC,sBAAKF,UAAU,OAAf,kBACOiC,KAAKC,MAAMpC,EAAQG,KAAKkC,YAD/B,cAID,qBAAKnC,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGG,aAI/C,SChFUmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.2bc504dc.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nconst api = {\n\tkey: '460af259479a2574e456a34ffff0205c',\n\tbase: 'http://api.openweathermap.org/data/2.5/',\n};\n\nfunction App() {\n\tconst [query, setQuery] = useState('');\n\tconst [weather, setWeather] = useState({});\n\tconst search = (evt) => {\n\t\tif (evt.key === 'Enter') {\n\t\t\tfetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((result) => {\n\t\t\t\t\tsetWeather(result);\n\t\t\t\t\tsetQuery('');\n\t\t\t\t\tconsole.log(result);\n\t\t\t\t});\n\t\t}\n\t};\n\n\tconst dateBuilder = (d) => {\n\t\tlet months = [\n\t\t\t'January',\n\t\t\t'February',\n\t\t\t'March',\n\t\t\t'April',\n\t\t\t'May',\n\t\t\t'June',\n\t\t\t'July',\n\t\t\t'August',\n\t\t\t'September',\n\t\t\t'October',\n\t\t\t'November',\n\t\t\t'December',\n\t\t];\n\t\tlet days = [\n\t\t\t'Sunday',\n\t\t\t'Monday',\n\t\t\t'Thusday',\n\t\t\t'Wensday',\n\t\t\t'Thursday',\n\t\t\t'Friday',\n\t\t\t'Saturday',\n\t\t];\n\t\tlet day = days[d.getDay()];\n\t\tlet date = d.getDate();\n\t\tlet month = months[d.getMonth()];\n\t\tlet year = d.getFullYear();\n\t\treturn `${day} ${date} ${month} ${year}`;\n\t};\n\treturn (\n\t\t<div\n\t\t\tclassName={\n\t\t\t\ttypeof weather.main != 'undefined'\n\t\t\t\t\t? weather.main.temp > 16\n\t\t\t\t\t\t? 'app warm'\n\t\t\t\t\t\t: 'app'\n\t\t\t\t\t: 'app'\n\t\t\t}\n\t\t>\n\t\t\t<main>\n\t\t\t\t<div className='search-box'>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tclassName='search-bar'\n\t\t\t\t\t\tplaceholder='Search...'\n\t\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\n\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t\tonKeyPress={search}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{typeof weather.main != 'undefined' ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className='location-box'>\n\t\t\t\t\t\t\t<div className='location'>\n\t\t\t\t\t\t\t\t{weather.name}, {weather.sys.country}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='date'>{dateBuilder(new Date())}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='weather-box'>\n\t\t\t\t\t\t\t<div className='temp'>\n\t\t\t\t\t\t\t\t{Math.round(weather.main.temp)}°c\n\t\t\t\t\t\t\t\t<div className='feel'>\n\t\t\t\t\t\t\t\t\tfeel {Math.round(weather.main.feels_like)}°c\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='weather'>{weather.weather[0].main}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}